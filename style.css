body {
  font-family: 'Poppins', sans-serif;
  background-color: #f9f9f9;
  color: #222;
  padding: 1rem;
  min-height: 100vh;
  display: flex;
  flex-direction: column;
  align-items: center;
}

header {
  text-align: center;
  margin-bottom: 2rem;
  width: 100%;
  max-width: 900px;
}

.logo {
  height: 60px;
  margin-bottom: 0.5rem;
}

h1 {
  font-weight: 600;
  font-size: 1.8rem;
  color: #2b2b2b;
}

h2 {
  margin: 0;
  font-size: 1.6rem;
  color: #187a81;
  cursor: pointer;
}

.category {
  background-color: #fff;
  padding: 16px;
  margin-bottom: 24px;
  border-radius: 12px;
  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.05);
  width: 100%; /* Garante que a categoria ocupe a largura total */
  max-width: 900px; /* Limita a largura máxima para alinhamento */
}

ul.items {
  list-style: none;
  padding: 0;
  margin: 16px 0;
  display: grid;
  /* `repeat(auto-fit, minmax(240px, 1fr))` já é excelente para adaptar o número de colunas! */
  /* Com esse setup, ele vai criar o máximo de colunas que puder, com no mínimo 240px cada. */
  /* Se você quer *exatamente* 3 colunas no desktop e mais em telas maiores, ou menos em telas menores, podemos refinar. */
  /* Por enquanto, vamos manter o seu `auto-fit` que já é muito bom para responsividade. */
  gap: 12px;
}

.item {
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding: 10px 14px;
  background-color: #f1f1f1;
  border-radius: 8px;
}

.item span {
  font-size: 0.95rem;
  color: #333;
  flex: 1;
  margin-right: 10px;
}

.qty-input {
  width: 60px;
  padding: 6px;
  border-radius: 6px;
  border: 1px solid #ccc;
  text-align: center;
  font-weight: 500;
  font-size: 0.95rem;
}

.below-min {
  border-color: red;
  background-color: #ffe5e5;
  color: #b00000;
  font-weight: bold;
}

.save-btn {
  display: block;
  margin: 8px auto 0;
  padding: 8px 20px;
  background-color: #187a81;
  color: white;
  border: none;
  border-radius: 8px;
  font-weight: 500;
  cursor: pointer;
  transition: background-color 0.3s;
}

.save-btn:hover {
  background-color: #165c61;
}

/* --- */

## Ajustes para Layout de Colunas em Desktop

A sua regra `ul.items { grid-template-columns: repeat(auto-fit, minmax(240px, 1fr)); }` já é *excelente* e faz a página ser muito responsiva. Ela automaticamente cria o **máximo de colunas que cabem**, cada uma com no mínimo 240px, e distribui o espaço igualmente. Isso significa que, em um desktop, você já deve ver 3 ou mais colunas, dependendo da largura da tela.

No entanto, se você deseja **fixar em 3 colunas** *apenas* em telas maiores e garantir que não tenha mais do que isso (mesmo que caibam 4 ou 5), podemos adicionar uma media query específica:

```css
@media (min-width: 992px) { /* Por exemplo, a partir de 992px de largura (telas de laptop grandes e desktops) */
    ul.items {
        grid-template-columns: repeat(3, 1fr); /* Fixa em 3 colunas de largura igual */
    }
}